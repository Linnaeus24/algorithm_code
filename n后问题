#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <math.h>

using namespace std;
#define N 5
class Queen {
	friend int nQueen(int);
	private:
	bool Place(int k);
	void Backtrack(int t);
	int n,           
	*x;         
	long sum;      
}; 

bool Queen ::Place(int k){
	 for(int j = 1;j < k; j++){
	  if((abs(k-j) == abs(x[j] - x[k])) || (x[j] == x[k])){
	  	return false;
	  }
	  return true;
	 }
} 

void Queen :: Backtrack(int t){
	 if(t > n){
	 	sum++;
	 }else{
	  for (int i = 1; i<=n;i++){
		x[t] = i;
		if(Place(t))
		Backtrack(t+1);
	  }
 }
}


int nQueen(int n){
	 Queen X;
	 //初始化X
	 X.n = n;
	 X.sum = 0;
	 int *p = new int [n+1];
	 for(int i=0;i <= n;i++){
	  p[i];
	 } 
	 X.x = p;
	 X.Backtrack(1);
	 delete[] p;
	 return X.sum;
}

int main(){
	 int x[N];
	 for(int i = 0; i<N; i++)
	  x[i] = -1;
	 int sum = nQueen(N);
	 cout<<N<<"皇后共有"<<sum<<"种解！"<<endl;
	 return 0; 
} 
